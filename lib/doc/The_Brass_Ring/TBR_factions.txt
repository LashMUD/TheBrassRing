Factions

Factions are a mapping. The mapping code (/lib/props/factions.c) is inherited
by the files /lib/interactive.c and /lib/npc.c. 

The file /lib/secure/include/props.h was modfied so that factions.c could be 
inherited properly by the required files. 

The factions code is based on the properties.c code in Dead Souls - the
function names and elements of the mapping have been changed. Factions are
added to the player file using AddFaction() and timers are stamped when the
faction is created or modified.

The function to add/create a faction:

mixed AddFaction(string fac, int flev, string faclev, string levtime, 
                 string rep, string reptime, int ltime, int rlev, int rtime){
    if(!flev) flev = 0;
    if(!ltime) ltime = 0;
    if(!rlev) rlev =0;
    if(!rtime) rtime =0;
    if( !stringp(fac) ) return 0;
    if( Factions[fac] ){
        flev += Factions[fac];
        ltime = SEASONS_D->GetTime();
    }
    else {
        Factions[fac] = flev;
        ltime = SEASONS_D->GetTime();
    }
    Factions[fac] = (["faction level":flev,"level_timer":ltime,"reputation":rlev,
                      "reputation_timer": rtime ]);
    return Factions[fac];
}


Variables used in the AddFaction() function:

1. string fac = Faction name (user designated)
2. int flev = faction level (user designated) 
3. string faclev = "faction level" (assigned in the function)
4. string levtime = "level_timer" (assigned in the function)
5. string rep = "reputation" (assigned in the function)
6. string reptime = "reputation_timer" (assigned in the function)
7. int ltime = level timer (assigned in the function)
8. int rlev = reputation level (assigned in the function)
9. int rtime = reputation timer (assigned in the function) 

A sample factions mapping as saved in the player file:

Factions ([ "Orcs of the Bloody Moon" : (["reputation" : 20, "level_timer" : 
            729384181, "faction level" : 10, "reputation_timer" :
            729384219 ]) ])

Using the function:

AddFaction("<faction_name>", integer);

Example:

AddFaction("Knights of the Round Table",1);

would add the faction "Knights of the Round Table" with a faction level of 1.
The level_timer would be set to whatever time in the mud it is when the 
function gets called. 

[IDEA] not programmed yet - needs a daemon
The level timer is compared to mudtime. If the player
has no interactions with the faction during one year of mudtime the faction 
level will be reduced by one. If a player interacts with a faction member NPC 
in some way during the mudtime year, the level timer is reset to the time of
interaction.

How do factions work in The Brass Ring?

Factions are used for player-npc interactions. A faction is just a name and can
be represented by a group or a single NPC.

NPC interaction determines if the player can join a faction. NPC trainers, 
quest givers, shop owners, etc. are used to set factions in the player object. 
Faction level and reputation determine the degree of interaction an NPC will 
have with the player. 

For example: a player known to be associated with the "Orcs of the Bloody
Moon", and having a high reputation with that faction, may have trouble getting
quests from an NPC belonging to the faction of "The Knights of Ambrial", for
example.

Setting NPC Factions

The function:

mapping SetFactions(mapping facs){
    if(sizeof(Factions)) return (Factions[facs] += facs);
    else return (Factions = facs);
}  

is used for setting a faction in a NPC as follows:

SetFactions( (["Merchants" : (["faction level" : 8, "reputation" :5]), 
               "Thief Guild" : (["faction level" : 14, "reputation" : 12])
              ]) );

The NPC belongs to the Merchants faction (faction level = 8; reputation = 5)
and Thief Guild faction (faction level = 14; reputation = 12

